{
  "_args": [
    [
      {
        "raw": "with@^7.0.0",
        "scope": null,
        "escapedName": "with",
        "name": "with",
        "rawSpec": "^7.0.0",
        "spec": ">=7.0.0 <8.0.0",
        "type": "range"
      },
      "C:\\Users\\User\\gocoder\\node_modules\\pug-code-gen"
    ]
  ],
  "_from": "with@^7.0.0",
  "_hasShrinkwrap": false,
  "_id": "with@7.0.2",
  "_location": "/pug-code-gen/with",
  "_nodeVersion": "12.16.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/with_7.0.2_1590749618188_0.30489362884125804"
  },
  "_npmUser": {
    "name": "with-bot",
    "email": "with-bot@rollingversions.com"
  },
  "_npmVersion": "6.14.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "with@^7.0.0",
    "scope": null,
    "escapedName": "with",
    "name": "with",
    "rawSpec": "^7.0.0",
    "spec": ">=7.0.0 <8.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/pug-code-gen"
  ],
  "_resolved": "https://registry.npmjs.org/with/-/with-7.0.2.tgz",
  "_shasum": "ccee3ad542d25538a7a7a80aad212b9828495bac",
  "_shrinkwrap": null,
  "_spec": "with@^7.0.0",
  "_where": "C:\\Users\\User\\gocoder\\node_modules\\pug-code-gen",
  "author": {
    "name": "ForbesLindesay"
  },
  "bugs": {
    "url": "https://github.com/pugjs/with/issues"
  },
  "dependencies": {
    "@babel/parser": "^7.9.6",
    "@babel/types": "^7.9.6",
    "assert-never": "^1.2.1",
    "babel-walk": "3.0.0-canary-5"
  },
  "description": "Compile time `with` for strict mode JavaScript",
  "devDependencies": {
    "@forbeslindesay/tsconfig": "^2.0.0",
    "@types/node": "^14.0.5",
    "mocha": "*",
    "prettier": "^2.0.5",
    "rimraf": "^3.0.2",
    "tslint": "^6.1.2",
    "typescript": "^3.9.3",
    "uglify-js": "^2.6.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-RNGKj82nUPg3g5ygxkQl0R937xLyho1J24ItRCBTr/m1YnZkzJy1hUiHUJrc/VlsDQzsCnInEGSg3bci0Lmd4w==",
    "shasum": "ccee3ad542d25538a7a7a80aad212b9828495bac",
    "tarball": "https://registry.npmjs.org/with/-/with-7.0.2.tgz",
    "fileCount": 22,
    "unpackedSize": 40288,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe0OmyCRA9TVsSAnZWagAAwasQAKGRYnII22tWrCPMgTO5\ndMIUuqaqKRZIXYy/05ebTsxpHbfnduaDndZuCWX9e4FzQxC9m+/PZSYvyDuE\nf0hafrX4j+NKZZTtBav9ARX0agNypdtJG/TTEWOkHm+I5/dvA4dEcztgcW/Q\nJSd2Y13kXBQcwqAEBbuT+mSmvuRBJvdKx9YFU+h2d+dkUYtJfnZxw+FK4aah\nTJG8CF3zmo6/yTUiaYL4kECWNSJ6Q1tdvxSvy7W4Y/li4WS9xVEKG3QYy/iT\nneJNUZ54ILP6Epc+7Gd4qxRTSNUWFAAJikEG1Q246/jiLNfZw4A5mb8TcOES\neQ8o8+7FenxcJCVsHgjF7WCqPQcNyrdrR1jMyBnwQsW1RZSBpR1CW+UoQPcF\nHifB3T5YcSCRj5AJQcB/1bpdcdw9+fS0j2ibTyBV5qctnSbJAbMdTR3RdAtL\nFaToNIRqffHqH/vcrz86Do/eDncnQkTQUe/cCS2LxCimk1iOaCZrkNmZHQC+\nKhzlccR/Zz2FAxvWTVdoHsKSafR23bS1FYWNqaO0XzDE9DOc2uKQIFpnaST9\n3E6vlkcKtMkjckWz62TjC8U8YdTWbksLWJQbnm7/qlBkxjedOnu202MJ2IcD\nASIdYATq8MyVgscFxT8U+otZSDTPKdolt5UjBs0PkrXoXaxvaxI70R0/rPKQ\nMWXK\r\n=hWAG\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 10.0.0"
  },
  "gitHead": "fcae468cb1ca7205a2a07dc9680f390a453b4e49",
  "homepage": "https://github.com/pugjs/with#readme",
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "forbeslindesay",
      "email": "forbes@lindesay.co.uk"
    },
    {
      "name": "with-bot",
      "email": "with-bot@rollingversions.com"
    }
  ],
  "name": "with",
  "optionalDependencies": {},
  "readme": "# with\n\nCompile time `with` for strict mode JavaScript\n\n[![Build Status](https://img.shields.io/github/workflow/status/pugjs/with/Publish%20Canary/master?style=for-the-badge)](https://github.com/pugjs/with/actions?query=workflow%3A%22Publish+Canary%22)\n[![Rolling Versions](https://img.shields.io/badge/Rolling%20Versions-Enabled-brightgreen?style=for-the-badge)](https://rollingversions.com/pugjs/with)\n[![NPM version](https://img.shields.io/npm/v/with?style=for-the-badge)](https://www.npmjs.com/package/with)\n\n## Installation\n\n    $ npm install with\n\n## Usage\n\n```js\nvar addWith = require('with');\n\naddWith('obj', 'console.log(a)');\n// => ';(function (console, a) {\n//       console.log(a)\n//     }(\"console\" in obj ? obj.console :\n//                          typeof console!==\"undefined\" ? console : undefined,\n//       \"a\" in obj ? obj.a :\n//                    typeof a !== \"undefined\" ? a : undefined));'\n\naddWith('obj', 'console.log(a)', ['console']);\n// => ';(function (console, a) {\n//       console.log(a)\n//     }(\"a\" in obj ? obj.a :\n//                    typeof a !== \"undefined\" ? a : undefined));'\n```\n\n## API\n\n### addWith(obj, src[, exclude])\n\nThe idea is that this is roughly equivallent to:\n\n```js\nwith (obj) {\n  src;\n}\n```\n\nThere are a few differences though. For starters, assignments to variables will always remain contained within the with block.\n\ne.g.\n\n```js\nvar foo = 'foo';\nwith ({}) {\n  foo = 'bar';\n}\nassert(foo === 'bar'); // => This fails for compile time with but passes for native with\n\nvar obj = {foo: 'foo'};\nwith ({}) {\n  foo = 'bar';\n}\nassert(obj.foo === 'bar'); // => This fails for compile time with but passes for native with\n```\n\nIt also makes everything be declared, so you can always do:\n\n```js\nif (foo === undefined)\n```\n\ninstead of\n\n```js\nif (typeof foo === 'undefined')\n```\n\nThis is not the case if foo is in `exclude`. If a variable is excluded, we ignore it entirely. This is useful if you know a variable will be global as it can lead to efficiency improvements.\n\nIt is also safe to use in strict mode (unlike `with`) and it minifies properly (`with` disables virtually all minification).\n\n#### Parsing Errors\n\nwith internally uses babylon to parse code passed to `addWith`. If babylon throws an error, probably due to a syntax error, `addWith` returns an error wrapping the babylon error, so you can\nretrieve location information. `error.component` is `\"src\"` if the error is in the body or `\"obj\"` if it's in the object part of the with expression. `error.babylonError` is\nthe error thrown from babylon.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pugjs/with.git"
  },
  "scripts": {
    "build": "tsc",
    "lint": "tslint './src/**/*.{ts,tsx}' -t verbose -p .",
    "postbuild": "rimraf lib/**/__tests__",
    "pretest": "yarn build",
    "prettier:check": "prettier --ignore-path .gitignore --list-different './**/*.{md,json,yaml,js,jsx,ts,tsx}'",
    "prettier:write": "prettier --ignore-path .gitignore --write './**/*.{md,json,yaml,js,jsx,ts,tsx}'",
    "test": "mocha test/index.js -R spec"
  },
  "version": "7.0.2"
}
